# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  server:
    build:
      context: .
    environment:
      NODE_ENV: production
    ports:
      - 3000:3000
    volumes:
      - ./:/usr/src/app
    # The commented out section below is an example of how to define a PostgreSQL
    # database that your application can use. `depends_on` tells Docker Compose to
    # start the database before your application. The `db-data` volume persists the
    # database data between container restarts. The `db-password` secret is used
    # to set the database password. You must create `db/password.txt` and add
    # a password of your choosing to it before running `docker-compose up`.
  db:
    image: mysql
    restart: always
    ports:
      - 3307:3307
    volumes:
      - ./:/var/lib/mysql/data
    environment:
      DB_HOST: express-database.cxx0p0l5tmi8.ap-northeast-2.rds.amazonaws.com
      DB_USERNAME: smy1308
      DB_PASSWORD: alsdud12
      DB_NAME: gosagi
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - ./:/var/lib/redis
